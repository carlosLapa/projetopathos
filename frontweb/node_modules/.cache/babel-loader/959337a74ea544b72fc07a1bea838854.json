{"ast":null,"code":"var _jsxFileName = \"C:\\\\ferreiraLapa\\\\projetopathos\\\\frontweb\\\\src\\\\pages\\\\EdificioDetails\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ReactComponent as ArrowIcon } from 'assets/images/arrow.svg';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { BASE_URL } from 'utils/requests';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EdificioDetails = () => {\n  _s();\n\n  /*Objeto desestruturado - para funcionar, temos q declará-lo através de um \"type\" antes de o utilizar \r\n    Agora podemos capturar, (no axios.get) os parametros URL que forem passados\r\n  */\n  const {\n    edificioId\n  } = useParams();\n  const [edificio, setEdificio] = useState();\n  /*\r\n  Chamada de API assíncrona -> ou seja, dispara enquanto a app roda e só num momento posterior chegará a resposta dessa requisição\r\n  Como controlamos a chegada da requisição? Através de uma Promise, neste caso .then\r\n  Esse \".then\", executa algo ao receber a requisição. Pode ser uma função, ou uma expressão lambda.\r\n  Definimos então um argumento com um determinado nome, normalmente será \"response\" para implementar uma expressão lambda neste caso,\r\n  e depois escrevemos o que queremos executar.\r\n    React Hooks -> Depois, é necessário controlar os momentos em que a chamada e a sequente cadeia de comandos/funções executam.\r\n  que vão permitir guardar o estado do \"edificio\" (em memória) e depois utilizamos conforme a necessidade.\r\n    useState -> Para armazenar o estado de um componente (ver acima)\r\n  Será uma constante com 2 elementos, onde recebemos o estado e onde atualizamos o valor do mesmo e onde parametrizamos o tipo do estado (Edificio)\r\n  Depois utilizamos na response abaixo para atualizar.\r\n    useEffect -> 2 argumentos. 1 função para executar (quando o componente for montado/renderizado) e 1 lista de dependencias \r\n  (lista de objetos que queremos observar, quando é alterada, a função roda novamente - nova renderização)\r\n  */\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/edificios/${edificioId}`).then(response => {\n      setEdificio(response.data);\n    });\n  }, [edificioId]);\n  /* O useEffect tb faz o seguinte -> Se o edificioId mudar, a requisição get é chamada novamente para o atualizar \r\n    semelhante a um \"observer\"\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edificio-details-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"base-card edificio-details-card\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edificios\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"go-back-container\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-6\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: edificio === null || edificio === void 0 ? void 0 : edificio.imgUrl,\n                alt: edificio === null || edificio === void 0 ? void 0 : edificio.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-typology-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: edificio === null || edificio === void 0 ? void 0 : edificio.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: edificio === null || edificio === void 0 ? void 0 : edificio.tipologia\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: edificio === null || edificio === void 0 ? void 0 : edificio.localizacao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: edificio === null || edificio === void 0 ? void 0 : edificio.utilizacao\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EdificioDetails, \"dCweha0CT9qX0AGaNYrjNdORync=\", false, function () {\n  return [useParams];\n});\n\n_c = EdificioDetails;\nexport default EdificioDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EdificioDetails\");","map":{"version":3,"names":["ReactComponent","ArrowIcon","axios","useEffect","useState","Link","useParams","BASE_URL","EdificioDetails","edificioId","edificio","setEdificio","get","then","response","data","imgUrl","nome","tipologia","localizacao","utilizacao"],"sources":["C:/ferreiraLapa/projetopathos/frontweb/src/pages/EdificioDetails/index.tsx"],"sourcesContent":["import { ReactComponent as ArrowIcon } from 'assets/images/arrow.svg';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Edificio } from 'types/edificio';\r\nimport { BASE_URL } from 'utils/requests';\r\n\r\nimport './styles.css';\r\n\r\ntype UrlParams = {\r\n  edificioId: string;\r\n}\r\n\r\n\r\nconst EdificioDetails = () => {\r\n\r\n  /*Objeto desestruturado - para funcionar, temos q declará-lo através de um \"type\" antes de o utilizar \r\n    Agora podemos capturar, (no axios.get) os parametros URL que forem passados\r\n  */\r\n  const { edificioId } = useParams<UrlParams>();\r\n\r\n  const [edificio, setEdificio] = useState<Edificio>();\r\n\r\n  /*\r\n  Chamada de API assíncrona -> ou seja, dispara enquanto a app roda e só num momento posterior chegará a resposta dessa requisição\r\n  Como controlamos a chegada da requisição? Através de uma Promise, neste caso .then\r\n  Esse \".then\", executa algo ao receber a requisição. Pode ser uma função, ou uma expressão lambda.\r\n  Definimos então um argumento com um determinado nome, normalmente será \"response\" para implementar uma expressão lambda neste caso,\r\n  e depois escrevemos o que queremos executar.\r\n\r\n  React Hooks -> Depois, é necessário controlar os momentos em que a chamada e a sequente cadeia de comandos/funções executam.\r\n  que vão permitir guardar o estado do \"edificio\" (em memória) e depois utilizamos conforme a necessidade.\r\n\r\n  useState -> Para armazenar o estado de um componente (ver acima)\r\n  Será uma constante com 2 elementos, onde recebemos o estado e onde atualizamos o valor do mesmo e onde parametrizamos o tipo do estado (Edificio)\r\n  Depois utilizamos na response abaixo para atualizar.\r\n\r\n  useEffect -> 2 argumentos. 1 função para executar (quando o componente for montado/renderizado) e 1 lista de dependencias \r\n  (lista de objetos que queremos observar, quando é alterada, a função roda novamente - nova renderização)\r\n  */\r\n\r\n  useEffect(() => {\r\n    axios.get(`${BASE_URL}/edificios/${edificioId}`)\r\n    .then((response) => {\r\n      setEdificio(response.data);\r\n    });\r\n  }, [edificioId]);\r\n  /* O useEffect tb faz o seguinte -> Se o edificioId mudar, a requisição get é chamada novamente para o atualizar \r\n    semelhante a um \"observer\"\r\n  */\r\n\r\n  return (\r\n    <div className=\"edificio-details-container\">\r\n      <div className=\"base-card edificio-details-card\">\r\n        <Link to=\"/edificios\">\r\n          <div className=\"go-back-container\">\r\n            <ArrowIcon />\r\n            <h2>Voltar</h2>\r\n          </div>\r\n        </Link>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-6\">\r\n          { <>\r\n              <div className=\"img-container\">\r\n                <img\r\n                  src={edificio?.imgUrl}\r\n                  alt={edificio?.nome}\r\n                />\r\n              </div>\r\n              <div className=\"name-typology-container\">\r\n                <h1>{edificio?.nome}</h1>\r\n                <h3>{edificio?.tipologia}</h3>\r\n              </div>\r\n              </> \r\n            }\r\n          </div>\r\n          <div className=\"col-xl-6\">\r\n            {\r\n              <div className=\"description-container\">\r\n                <h2>{edificio?.localizacao}</h2>\r\n                <p>\r\n                <h2>{edificio?.utilizacao}</h2>\r\n                </p>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EdificioDetails;\r\n"],"mappings":";;;AAAA,SAASA,cAAc,IAAIC,SAA3B,QAA4C,yBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,cAAP;;;;AAOA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAE5B;AACF;AACA;EACE,MAAM;IAAEC;EAAF,IAAiBH,SAAS,EAAhC;EAEA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKED,SAAS,CAAC,MAAM;IACdD,KAAK,CAACU,GAAN,CAAW,GAAEL,QAAS,cAAaE,UAAW,EAA9C,EACCI,IADD,CACOC,QAAD,IAAc;MAClBH,WAAW,CAACG,QAAQ,CAACC,IAAV,CAAX;IACD,CAHD;EAID,CALQ,EAKN,CAACN,UAAD,CALM,CAAT;EAMA;AACF;AACA;;EAEE,oBACE;IAAK,SAAS,EAAC,4BAAf;IAAA,uBACE;MAAK,SAAS,EAAC,iCAAf;MAAA,wBACE,QAAC,IAAD;QAAM,EAAE,EAAC,YAAT;QAAA,uBACE;UAAK,SAAS,EAAC,mBAAf;UAAA,wBACE,QAAC,SAAD;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAK,SAAS,EAAC,KAAf;QAAA,wBACE;UAAK,SAAS,EAAC,UAAf;UAAA,uBACE;YAAA,wBACE;cAAK,SAAS,EAAC,eAAf;cAAA,uBACE;gBACE,GAAG,EAAEC,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEM,MADjB;gBAEE,GAAG,EAAEN,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEO;cAFjB;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAOE;cAAK,SAAS,EAAC,yBAAf;cAAA,wBACE;gBAAA,UAAKP,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAEO;cAAf;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAA,UAAKP,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAEQ;cAAf;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QAPF;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAgBE;UAAK,SAAS,EAAC,UAAf;UAAA,uBAEI;YAAK,SAAS,EAAC,uBAAf;YAAA,wBACE;cAAA,UAAKR,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAES;YAAf;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,uBACA;gBAAA,UAAKT,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAEU;cAAf;gBAAA;gBAAA;gBAAA;cAAA;YADA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QAFJ;UAAA;UAAA;UAAA;QAAA,QAhBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD,CA5ED;;GAAMZ,e;UAKmBF,S;;;KALnBE,e;AA8EN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}