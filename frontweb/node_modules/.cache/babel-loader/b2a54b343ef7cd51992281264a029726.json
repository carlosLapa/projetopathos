{"ast":null,"code":"import { createContext } from 'react';\n\n/*Cria o contexto propriamente dito, através das definições nos types anteriores\r\nParametrizamos, definimos um valor inicial (authenticated: false) e depois a função com valor inicial de null,\r\nque será sobrescrita posteriormente.\r\n*/\nexport const AuthContext = /*#__PURE__*/createContext({\n  authContextData: {\n    authenticated: false\n  },\n  setAuthContextData: () => null\n});","map":{"version":3,"names":["createContext","AuthContext","authContextData","authenticated","setAuthContextData"],"sources":["C:/ferreiraLapa/projetopathos/frontweb/src/AuthContext.ts"],"sourcesContent":["import { createContext } from 'react';\r\nimport { TokenData } from 'util/requests';\r\n\r\n/*type, com os dados do tokenData e true/false para o estado authenticated, para possibilitar a lógica de Login/Logout \r\n\r\nCriamos o Estado Global (ver doc do React sobre Contexts), com o mesmo propósito ao supramencionado, mas que vai permitir\r\nutilizar estes dados entre componentes independentes.\r\n*/\r\nexport type AuthContextData = {\r\n  authenticated: boolean;\r\n  tokenData?: TokenData;\r\n};\r\n\r\n/*type que contém um dado/atributo e uma função, que recebe o dado e que só altera o valor e não retorna nada, daí o void */\r\nexport type AuthContextType = {\r\n  authContextData: AuthContextData;\r\n  setAuthContextData: (authContextData: AuthContextData) => void;\r\n};\r\n\r\n/*Cria o contexto propriamente dito, através das definições nos types anteriores\r\nParametrizamos, definimos um valor inicial (authenticated: false) e depois a função com valor inicial de null,\r\nque será sobrescrita posteriormente.\r\n*/\r\nexport const AuthContext = createContext<AuthContextType>({\r\n  authContextData: {\r\n    authenticated: false,\r\n  },\r\n  setAuthContextData: () => null,\r\n});\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;;AAmBA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,CAAkB;EACxDE,eAAe,EAAE;IACfC,aAAa,EAAE;EADA,CADuC;EAIxDC,kBAAkB,EAAE,MAAM;AAJ8B,CAAlB,CAAjC"},"metadata":{},"sourceType":"module"}