{"ast":null,"code":"var _jsxFileName = \"C:\\\\ferreiraLapa\\\\projetopathos\\\\frontweb\\\\src\\\\components\\\\Pagination\\\\index.tsx\";\nimport { ReactComponent as ArrowIcon } from 'assets/images/arrow.svg';\nimport ReactPaginate from 'react-paginate';\nimport './styles.css';\n/**\r\n * Aqui tipamos a função (typesafe) para garantir que é recebido um número como argumento, numa função que seja void\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  let {\n    pageCount,\n    range,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ReactPaginate, {\n    pageCount: pageCount,\n    pageRangeDisplayed: range,\n    marginPagesDisplayed: 1,\n    containerClassName: \"pagination-container\",\n    pageLinkClassName: \"pagination-item\",\n    breakClassName: \"pagination-item\",\n    previousClassName: \"arrow-previous\",\n    nextClassName: \"arrow-next\",\n    activeLinkClassName: \"pagination-link-active\",\n    disabledClassName: \"arrow-inactive\",\n    onPageChange: items => onChange(items.selected),\n    previousLabel: /*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this),\n    nextLabel: /*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["ReactComponent","ArrowIcon","ReactPaginate","Pagination","pageCount","range","onChange","items","selected"],"sources":["C:/ferreiraLapa/projetopathos/frontweb/src/components/Pagination/index.tsx"],"sourcesContent":["import { ReactComponent as ArrowIcon } from 'assets/images/arrow.svg';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport './styles.css';\r\n\r\n/**\r\n * Aqui tipamos a função (typesafe) para garantir que é recebido um número como argumento, numa função que seja void\r\n */\r\ntype Props = {\r\n  pageCount: number;\r\n  range: number;\r\n  onChange: (pageNumber: number) => void;\r\n};\r\n\r\nconst Pagination = ({ pageCount, range, onChange }: Props) => {\r\n  return (\r\n    <ReactPaginate\r\n      pageCount={pageCount}\r\n      pageRangeDisplayed={range}\r\n      marginPagesDisplayed={1}\r\n      containerClassName=\"pagination-container\"\r\n      pageLinkClassName=\"pagination-item\"\r\n      breakClassName=\"pagination-item\"\r\n      previousClassName=\"arrow-previous\"\r\n      nextClassName=\"arrow-next\"\r\n      activeLinkClassName=\"pagination-link-active\"\r\n      disabledClassName=\"arrow-inactive\"\r\n\r\n      onPageChange={(items) => onChange(items.selected)}\r\n\r\n      previousLabel={<ArrowIcon />}\r\n      nextLabel={<ArrowIcon />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"mappings":";AAAA,SAASA,cAAc,IAAIC,SAA3B,QAA4C,yBAA5C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAO,cAAP;AAEA;AACA;AACA;;;;AAOA,MAAMC,UAAU,GAAG,QAA2C;EAAA,IAA1C;IAAEC,SAAF;IAAaC,KAAb;IAAoBC;EAApB,CAA0C;EAC5D,oBACE,QAAC,aAAD;IACE,SAAS,EAAEF,SADb;IAEE,kBAAkB,EAAEC,KAFtB;IAGE,oBAAoB,EAAE,CAHxB;IAIE,kBAAkB,EAAC,sBAJrB;IAKE,iBAAiB,EAAC,iBALpB;IAME,cAAc,EAAC,iBANjB;IAOE,iBAAiB,EAAC,gBAPpB;IAQE,aAAa,EAAC,YARhB;IASE,mBAAmB,EAAC,wBATtB;IAUE,iBAAiB,EAAC,gBAVpB;IAYE,YAAY,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACC,QAAP,CAZnC;IAcE,aAAa,eAAE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAdjB;IAeE,SAAS,eAAE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA;EAfb;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CApBD;;KAAML,U;AAsBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}