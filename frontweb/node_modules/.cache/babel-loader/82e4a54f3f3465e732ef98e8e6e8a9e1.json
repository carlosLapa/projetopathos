{"ast":null,"code":"var _jsxFileName = \"C:\\\\ferreiraLapa\\\\projetopathos\\\\frontweb\\\\src\\\\pages\\\\Catalogo\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport EdificioCard from 'components/EdificioCard';\nimport Pagination from 'components/Pagination';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BASE_URL } from 'utils/requests';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catalogo = () => {\n  _s();\n\n  /*\r\n  useState para a paginação de edificios, que armazena a página q chega do Backend, e que depois vai preencher a tela e depois poder atualizá-la;\r\n  A SpringPage <T> do tipo genérico (criada na pasta \"vendor\"), que terá uma lista [], que neste caso vai receber o tipo Edificio, permite \"casar\"\r\n  a info que nos chega do Backend, com a info que vamos tratar e mostrar no Frontend;\r\n    useEffect para efetuar a requisição somente quando entramos na página, com 2 argumentos:\r\n  a função, com o AxiosParams, que recebem o metodo, url e queryParams. A data aqui, como é um método GET, não tem corpo (além de que está como opcional, ?)\r\n  e ainda as dependencias []\r\n  !Cuidado na questão da dependência [] no final da response. Pois, cada vez que é detetada uma mudança na page, a requisição é efetuada novamente\r\n  o que pode dar azo a um ciclo infinito! Então por enquanto deixamos vazia.\r\n    depois a requisição axios já chama os params definidos anteriormente.\r\n  */\n  const [page, setPage] = useState();\n  useEffect(() => {\n    const params = {\n      method: 'GET',\n      url: `${BASE_URL}/edificios`,\n      params: {\n        page: 0,\n        size: 12\n      }\n    };\n    axios(params).then(response => {\n      setPage(response.data);\n      console.log(page);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4 catalog-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row catalog-title-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edif\\xEDcios intervencionados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [page === null || page === void 0 ? void 0 : page.content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6 col-lg-4 col-xl-6\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"edificios/1\",\n          children: /*#__PURE__*/_jsxDEV(EdificioCard, {\n            edificio: edificio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Catalogo, \"g/XYR6a5Ljv8Nir5rb89yZzpJS0=\");\n\n_c = Catalogo;\nexport default Catalogo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalogo\");","map":{"version":3,"names":["axios","EdificioCard","Pagination","useEffect","useState","Link","BASE_URL","Catalogo","page","setPage","params","method","url","size","then","response","data","console","log","content","edificio"],"sources":["C:/ferreiraLapa/projetopathos/frontweb/src/pages/Catalogo/index.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport EdificioCard from 'components/EdificioCard';\r\nimport Pagination from 'components/Pagination';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Edificio } from 'types/edificio';\r\nimport { AxiosParams } from 'types/vendor/axios';\r\nimport { SpringPage } from 'types/vendor/spring';\r\nimport { BASE_URL } from 'utils/requests';\r\n\r\nimport './styles.css';\r\n\r\nconst Catalogo = () => {\r\n  /*\r\n  useState para a paginação de edificios, que armazena a página q chega do Backend, e que depois vai preencher a tela e depois poder atualizá-la;\r\n  A SpringPage <T> do tipo genérico (criada na pasta \"vendor\"), que terá uma lista [], que neste caso vai receber o tipo Edificio, permite \"casar\"\r\n  a info que nos chega do Backend, com a info que vamos tratar e mostrar no Frontend;\r\n\r\n  useEffect para efetuar a requisição somente quando entramos na página, com 2 argumentos:\r\n  a função, com o AxiosParams, que recebem o metodo, url e queryParams. A data aqui, como é um método GET, não tem corpo (além de que está como opcional, ?)\r\n  e ainda as dependencias []\r\n  !Cuidado na questão da dependência [] no final da response. Pois, cada vez que é detetada uma mudança na page, a requisição é efetuada novamente\r\n  o que pode dar azo a um ciclo infinito! Então por enquanto deixamos vazia.\r\n\r\n  depois a requisição axios já chama os params definidos anteriormente.\r\n  */\r\n  const [page, setPage] = useState<SpringPage<Edificio>>();\r\n\r\n  useEffect(() => {\r\n    const params: AxiosParams = {\r\n      method: 'GET',\r\n      url: `${BASE_URL}/edificios`,\r\n      params: {\r\n        page: 0,\r\n        size: 12,\r\n      },\r\n    };\r\n\r\n    axios(params).then((response) => {\r\n      setPage(response.data);\r\n      console.log(page);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container my-4 catalog-container\">\r\n      <div className=\"row catalog-title-container\">\r\n        <h1>Edifícios intervencionados</h1>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n\r\n        {page?.content}\r\n\r\n\r\n        <div className=\"col-sm-6 col-lg-4 col-xl-6\">\r\n          <Link to=\"edificios/1\">\r\n            <EdificioCard edificio={edificio} />\r\n          </Link>\r\n        </div>\r\n       \r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <Pagination />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Catalogo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAIA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,cAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMO,MAAmB,GAAG;MAC1BC,MAAM,EAAE,KADkB;MAE1BC,GAAG,EAAG,GAAEN,QAAS,YAFS;MAG1BI,MAAM,EAAE;QACNF,IAAI,EAAE,CADA;QAENK,IAAI,EAAE;MAFA;IAHkB,CAA5B;IASAb,KAAK,CAACU,MAAD,CAAL,CAAcI,IAAd,CAAoBC,QAAD,IAAc;MAC/BN,OAAO,CAACM,QAAQ,CAACC,IAAV,CAAP;MACAC,OAAO,CAACC,GAAR,CAAYV,IAAZ;IACD,CAHD;EAID,CAdQ,EAcN,EAdM,CAAT;EAgBA,oBACE;IAAK,SAAS,EAAC,kCAAf;IAAA,wBACE;MAAK,SAAS,EAAC,6BAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,KAAf;MAAA,WAEGA,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEW,OAFT,eAKE;QAAK,SAAS,EAAC,4BAAf;QAAA,uBACE,QAAC,IAAD;UAAM,EAAE,EAAC,aAAT;UAAA,uBACE,QAAC,YAAD;YAAc,QAAQ,EAAEC;UAAxB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAkBE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAxDD;;GAAMb,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}