{"ast":null,"code":"var _jsxFileName = \"C:\\\\ferreiraLapa\\\\projetopathos\\\\frontweb\\\\src\\\\pages\\\\Admin\\\\Auth\\\\Login\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useHistory } from 'react-router-dom';\nimport ButtonIcon from 'components/ButtonIcon';\nimport { useForm } from 'react-hook-form';\nimport { getTokenData, requestBackendLogin, saveAuthData } from 'util/requests';\nimport './styles.css';\nimport { useContext, useState } from 'react';\nimport { AuthContext } from 'AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*Agora podemos usar os campos do type, que representa os dados do formulário, para parametrizar o useForm\r\n  Depois a função onSubmit vai receber o atributo formData, do tipo FormData.\r\n  Para o login propriamente dito, podemos utilizar esse tipo tb, dado que temos os mesmos atributos,\r\n\r\n Na função onSubmit, chamamos a função \"requestBackendLogin\" (folder -> utils -> requests) e passamos como argumento o formData\r\n  depois salva os dados no localStorage, verificamos q não há erro e redireciona para o /admin.\r\n  Sendo uma promise, implementamos a estrutura habitual .then e .catch\r\n  */\nconst Login = () => {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  /**Referência do contexto global - para utilizar na função onSubmit de login\r\n   * \r\n   */\n  const {\n    authContextData,\n    setAuthContextData\n  } = useContext(AuthContext);\n  /* useState, para renderização condicional de erro de preenchimento */\n\n  /* formState (desestruturado), para controlar o comportamento de validação do formulário. Como a função onde está implementado, \r\n  o useForm já está parametrizado com a FormData e, portanto, ligado à variável \"formData\", este vai detetar erros de preenchimento no campo de \r\n  input apropriados para cada um desses atributos. Depois ainda podemos usar o atributo \"message\" para fazer display da mensagem que definimos\r\n  no \"required\"  \r\n  */\n\n  const [hasError, setHasError] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  /* Função do react-router-dom - Permite que façamos redireccionamento e mudança de rota programaticamente \r\n  neste caso usamos o \".push\" que acrescenta uma nova rota na pilha de rotas, que \"desempilha\" ao voltar às rotas\r\n  */\n\n  const history = useHistory();\n\n  const onSubmit = formData => {\n    requestBackendLogin(formData).then(response => {\n      saveAuthData(response.data);\n      setHasError(false);\n      setAuthContextData({\n        authenticated: true,\n        tokenData: getTokenData()\n      });\n      history.push('/admin');\n    }).catch(error => {\n      setHasError(true);\n      console.log('ERRO');\n    });\n    console.log(formData);\n  };\n  /*Na tag do form -> \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n\n  /*Baixo, já dentro do form no input -> register your input into the hook by invoking the \"register\" function */\n\n  /*mb-4 -> \"margin-bottom 4\" - estilo direto do bootstrap */\n\n  /*A crase `` permite colocar expressões do javascript \r\n  Neste caso, vamos usar a crase para aplicar uma expressão condicional ternária, no css, para renderizar, ou não, o campo de input como inválido,\r\n  com o estilo do bootstrap\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-card login-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: \"Erro de Login!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('username', {\n            required: 'Campo obrigatório',\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: 'Email inválido'\n            }\n          }),\n          type: \"text\",\n          className: `form-control base-input ${errors.username ? 'is-invalid' : ''}`,\n          placeholder: \"Email\",\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback d-block\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('password', {\n            required: 'Campo obrigatório'\n          }),\n          type: \"password\",\n          className: `form-control base-input ${errors.password ? 'is-invalid' : ''}`,\n          placeholder: \"Password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback d-block\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/auth/recover\",\n        className: \"login-link-recover\",\n        children: \"Esqueci a senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-submit\",\n        children: /*#__PURE__*/_jsxDEV(ButtonIcon, {\n          text: \"Efetuar login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"not-registered\",\n          children: \"N\\xE3o est\\xE1 registado?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/admin/auth/register\",\n          className: \"login-link-register\",\n          children: \"REGISTAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Ae4O7i7dMrmBCTVkXQmfT6ikem8=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","useHistory","ButtonIcon","useForm","getTokenData","requestBackendLogin","saveAuthData","useContext","useState","AuthContext","Login","authContextData","setAuthContextData","hasError","setHasError","register","handleSubmit","formState","errors","history","onSubmit","formData","then","response","data","authenticated","tokenData","push","catch","error","console","log","required","pattern","value","message","username","password"],"sources":["C:/ferreiraLapa/projetopathos/frontweb/src/pages/Admin/Auth/Login/index.tsx"],"sourcesContent":["import { Link, useHistory } from 'react-router-dom';\r\nimport ButtonIcon from 'components/ButtonIcon';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getAuthData, getTokenData, requestBackendLogin, saveAuthData } from 'util/requests';\r\n\r\nimport './styles.css';\r\nimport { useContext, useState } from 'react';\r\nimport { AuthContext } from 'AuthContext';\r\n\r\ntype FormData = {\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\n/*Agora podemos usar os campos do type, que representa os dados do formulário, para parametrizar o useForm\r\n  Depois a função onSubmit vai receber o atributo formData, do tipo FormData.\r\n  Para o login propriamente dito, podemos utilizar esse tipo tb, dado que temos os mesmos atributos,\r\n\r\n Na função onSubmit, chamamos a função \"requestBackendLogin\" (folder -> utils -> requests) e passamos como argumento o formData\r\n  depois salva os dados no localStorage, verificamos q não há erro e redireciona para o /admin.\r\n  Sendo uma promise, implementamos a estrutura habitual .then e .catch\r\n  */\r\n\r\nconst Login = () => {\r\n  /**Referência do contexto global - para utilizar na função onSubmit de login\r\n   * \r\n   */\r\n  const { authContextData, setAuthContextData } = useContext(AuthContext); \r\n\r\n  /* useState, para renderização condicional de erro de preenchimento */\r\n\r\n  /* formState (desestruturado), para controlar o comportamento de validação do formulário. Como a função onde está implementado, \r\n  o useForm já está parametrizado com a FormData e, portanto, ligado à variável \"formData\", este vai detetar erros de preenchimento no campo de \r\n  input apropriados para cada um desses atributos. Depois ainda podemos usar o atributo \"message\" para fazer display da mensagem que definimos\r\n  no \"required\"  \r\n  */\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const { register, handleSubmit, formState: { errors }, } = useForm<FormData>();\r\n\r\n  /* Função do react-router-dom - Permite que façamos redireccionamento e mudança de rota programaticamente \r\n  neste caso usamos o \".push\" que acrescenta uma nova rota na pilha de rotas, que \"desempilha\" ao voltar às rotas\r\n  */\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (formData: FormData) => {\r\n    requestBackendLogin(formData)\r\n      .then((response) => {\r\n        saveAuthData(response.data);\r\n        setHasError(false);\r\n        setAuthContextData({\r\n          authenticated: true,\r\n          tokenData: getTokenData(),\r\n        })\r\n        history.push('/admin');\r\n      })\r\n      .catch((error) => {\r\n        setHasError(true);\r\n        console.log('ERRO');\r\n      });\r\n    console.log(formData);\r\n  };\r\n\r\n  /*Na tag do form -> \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\r\n  /*Baixo, já dentro do form no input -> register your input into the hook by invoking the \"register\" function */\r\n\r\n  /*mb-4 -> \"margin-bottom 4\" - estilo direto do bootstrap */\r\n\r\n  /*A crase `` permite colocar expressões do javascript \r\n  Neste caso, vamos usar a crase para aplicar uma expressão condicional ternária, no css, para renderizar, ou não, o campo de input como inválido,\r\n  com o estilo do bootstrap\r\n  */\r\n  return (\r\n    <div className=\"base-card login-card\">\r\n      <h1>LOGIN</h1>\r\n      {hasError && <div className=\"alert alert-danger\">Erro de Login!</div>}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"mb-4\">\r\n          <input\r\n            {...register('username', {\r\n              required: 'Campo obrigatório',\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: 'Email inválido'\r\n              }\r\n            })}\r\n            type=\"text\"\r\n            className={`form-control base-input ${errors.username ? 'is-invalid' : ''}`}\r\n            placeholder=\"Email\"\r\n            name=\"username\"\r\n          />\r\n          <div className=\"invalid-feedback d-block\">\r\n            {errors.username?.message}\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <input\r\n            {...register('password', {\r\n              required: 'Campo obrigatório',\r\n            })}\r\n            type=\"password\"\r\n            className={`form-control base-input ${errors.password ? 'is-invalid' : ''}`}\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n          />\r\n          <div className=\"invalid-feedback d-block\">\r\n            {errors.password?.message}\r\n          </div>\r\n        </div>\r\n        <Link to=\"/admin/auth/recover\" className=\"login-link-recover\">\r\n          Esqueci a senha\r\n        </Link>\r\n        <div className=\"login-submit\">\r\n          <ButtonIcon text=\"Efetuar login\" />\r\n        </div>\r\n        <div className=\"signup-container\">\r\n          <span className=\"not-registered\">Não está registado?</span>\r\n          <Link to=\"/admin/auth/register\" className=\"login-link-register\">\r\n            REGISTAR\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}