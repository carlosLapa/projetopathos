{"ast":null,"code":"var _jsxFileName = \"C:\\\\ferreiraLapa\\\\projetopathos\\\\frontweb\\\\src\\\\components\\\\PrivateRoute\\\\index.tsx\";\nimport { Redirect, Route } from 'react-router-dom';\nimport { isAuthenticated } from 'util/requests';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** \r\n * Componente que devolve um Route, do router-dom, que por sua vez contém o path e \r\n * o render, função que testa se está autenticado, se sim, renderiza os children, se não, redireciona para o login \r\n * \r\n * Mas para melhorar a experiencia do utilizador, vamos incrementar o redirect\r\n * no render, colocamos um argumento, location\r\n * no redirect, \r\n*/\nconst PrivateRoute = _ref => {\n  let {\n    children,\n    path\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      return isAuthenticated() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: children\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/admin/auth/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 47\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Redirect","Route","isAuthenticated","PrivateRoute","children","path","location","pathname","state","from"],"sources":["C:/ferreiraLapa/projetopathos/frontweb/src/components/PrivateRoute/index.tsx"],"sourcesContent":["import { Redirect, Route } from 'react-router-dom';\r\nimport { isAuthenticated } from 'util/requests';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  path: string;\r\n};\r\n\r\n/** \r\n * Componente que devolve um Route, do router-dom, que por sua vez contém o path e \r\n * o render, função que testa se está autenticado, se sim, renderiza os children, se não, redireciona para o login \r\n * \r\n * Mas para melhorar a experiencia do utilizador, vamos incrementar o redirect\r\n * no render, colocamos um argumento, location\r\n * no redirect, \r\n*/\r\n\r\nconst PrivateRoute = ({ children, path }: Props) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={({location}) =>\r\n        isAuthenticated() ? <>{children}</> : <Redirect to={{\r\n          pathname: \"/admin/auth/login\",\r\n          state: {from: location}\r\n        }} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,eAAhC;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,YAAY,GAAG,QAA+B;EAAA,IAA9B;IAAEC,QAAF;IAAYC;EAAZ,CAA8B;EAClD,oBACE,QAAC,KAAD;IACE,IAAI,EAAEA,IADR;IAEE,MAAM,EAAE;MAAA,IAAC;QAACC;MAAD,CAAD;MAAA,OACNJ,eAAe,kBAAK;QAAA,UAAGE;MAAH,iBAAL,gBAAuB,QAAC,QAAD;QAAU,EAAE,EAAE;UAClDG,QAAQ,EAAE,mBADwC;UAElDC,KAAK,EAAE;YAACC,IAAI,EAAEH;UAAP;QAF2C;MAAd;QAAA;QAAA;QAAA;MAAA,QADhC;IAAA;EAFV;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAZD;;KAAMH,Y;AAcN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}