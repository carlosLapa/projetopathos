{"ast":null,"code":"var _jsxFileName = \"C:\\\\ferreiraLapa\\\\projetopathos\\\\frontweb\\\\src\\\\components\\\\EdificioFilter\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ReactComponent as SearchIcon } from 'assets/images/search-icon.svg';\nimport { useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport Select from 'react-select';\nimport { requestBackend } from 'util/requests';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EdificioFilter = () => {\n  _s();\n\n  const [selectAnomalias, setSelectAnomalias] = useState([]);\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    control\n  } = useForm();\n\n  const onSubmit = formData => {\n    console.log('ENVIADO', formData);\n  };\n  /**\r\n   * Função, que dispara ao clicar no botão \"Limpar filtro\",\r\n   * para \"settar\" (setValue) o valor do nome como string vazia e as anomalias como nulas\r\n   */\n\n\n  const handleFormClear = () => {\n    setValue('name', '');\n    setValue('anomalia', null);\n  };\n\n  useEffect(() => {\n    requestBackend({\n      url: '/anomalias'\n    }).then(response => {\n      setSelectAnomalias(response.data.content);\n    });\n  }, []);\n  /**\r\n   * Ao limpar o filtro da Anomalia, vamos enviar tb o formulário.\r\n   * Para isso temos que passar o valor da mesma, sempre que mudar no select,\r\n   * assim passamos o argumento com o value da Anomalia. Desto modo, na função o tipo é Anomalia.\r\n   * Depois, fazemos um setValue para settar o value e ainda acrescentar os dados do formulário para ser enviado.\r\n   */\n\n  const handleChangeAnomalia = value => {\n    setValue('anomalia', value);\n    const obj = {\n      name: getValues('name'),\n      anomalia: getValues('anomalia')\n    };\n    console.log('ENVIADO', obj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-card edificio-filter-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"edificio-filter-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edificio-filter-name-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('name'),\n          type: \"text\",\n          className: \"form-control base-input\",\n          placeholder: \"Designa\\xE7\\xE3o do edif\\xEDcio\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edificio-filter-search-icon\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edificio-filter-bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edificio-filter-anomalia-container\",\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"anomalia\",\n            control: control,\n            render: _ref => {\n              let {\n                field\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Select, { ...field,\n                options: selectAnomalias,\n                isClearable: true,\n                placeholder: \"Anomalia\",\n                classNamePrefix: \"edificio-filter-select\",\n                onChange: value => handleChangeAnomalia(value),\n                getOptionLabel: anomalia => anomalia.tipologia,\n                getOptionValue: anomalia => String(anomalia.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFormClear,\n          className: \"btn btn-outline-secondary btn-edificio-filter-clear\",\n          children: [\"LIMPAR \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-edificio-filter-word\",\n            children: \"FILTRO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EdificioFilter, \"RVeuEdOC4axvI+RMQkm/eumHcSc=\", false, function () {\n  return [useForm];\n});\n\n_c = EdificioFilter;\nexport default EdificioFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"EdificioFilter\");","map":{"version":3,"names":["ReactComponent","SearchIcon","useEffect","useState","Controller","useForm","Select","requestBackend","EdificioFilter","selectAnomalias","setSelectAnomalias","register","setValue","getValues","handleSubmit","control","onSubmit","formData","console","log","handleFormClear","url","then","response","data","content","handleChangeAnomalia","value","obj","name","anomalia","field","tipologia","String","id"],"sources":["C:/ferreiraLapa/projetopathos/frontweb/src/components/EdificioFilter/index.tsx"],"sourcesContent":["import { getValue } from '@testing-library/user-event/dist/utils';\r\nimport { ReactComponent as SearchIcon } from 'assets/images/search-icon.svg';\r\nimport { useEffect, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport Select, { SingleValue } from 'react-select';\r\nimport { Anomalia } from 'types/anomalia';\r\nimport { requestBackend } from 'util/requests';\r\n\r\nimport './styles.css';\r\n\r\ntype EdificioFilterData = {\r\n  name: string;\r\n  anomalia: Anomalia | null;\r\n};\r\n\r\nconst EdificioFilter = () => {\r\n  const [selectAnomalias, setSelectAnomalias] = useState<Anomalia[]>([]);\r\n\r\n  const { register, setValue, getValues, handleSubmit, control } =\r\n    useForm<EdificioFilterData>();\r\n\r\n  const onSubmit = (formData: EdificioFilterData) => {\r\n    console.log('ENVIADO', formData);\r\n  };\r\n\r\n  /**\r\n   * Função, que dispara ao clicar no botão \"Limpar filtro\",\r\n   * para \"settar\" (setValue) o valor do nome como string vazia e as anomalias como nulas\r\n   */\r\n  const handleFormClear = () => {\r\n    setValue('name', '');\r\n    setValue('anomalia', null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestBackend({ url: '/anomalias' }).then((response) => {\r\n      setSelectAnomalias(response.data.content);\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Ao limpar o filtro da Anomalia, vamos enviar tb o formulário.\r\n   * Para isso temos que passar o valor da mesma, sempre que mudar no select,\r\n   * assim passamos o argumento com o value da Anomalia. Desto modo, na função o tipo é Anomalia.\r\n   * Depois, fazemos um setValue para settar o value e ainda acrescentar os dados do formulário para ser enviado.\r\n   */\r\n  const handleChangeAnomalia = (value: Anomalia) => {\r\n    setValue('anomalia', value);\r\n\r\n    const obj: EdificioFilterData = {\r\n      name: getValues('name'),\r\n      anomalia: getValues('anomalia'),\r\n    };\r\n\r\n    console.log('ENVIADO', obj);\r\n  };\r\n\r\n  return (\r\n    <div className=\"base-card edificio-filter-container\">\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"edificio-filter-form\">\r\n        <div className=\"edificio-filter-name-container\">\r\n          <input\r\n            {...register('name')}\r\n            type=\"text\"\r\n            className=\"form-control base-input\"\r\n            placeholder=\"Designação do edifício\"\r\n            name=\"name\"\r\n          />\r\n          <button className=\"edificio-filter-search-icon\">\r\n            <SearchIcon />\r\n          </button>\r\n        </div>\r\n        <div className=\"edificio-filter-bottom-container\">\r\n          <div className=\"edificio-filter-anomalia-container\">\r\n            <Controller\r\n              name=\"anomalia\"\r\n              control={control}\r\n              render={({ field }) => (\r\n                <Select\r\n                  {...field}\r\n                  options={selectAnomalias}\r\n                  isClearable\r\n                  placeholder=\"Anomalia\"\r\n                  classNamePrefix=\"edificio-filter-select\"\r\n                  onChange={(value) => handleChangeAnomalia(value as Anomalia)}\r\n                  getOptionLabel={(anomalia: Anomalia) => anomalia.tipologia}\r\n                  getOptionValue={(anomalia: Anomalia) => String(anomalia.id)}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleFormClear}\r\n            className=\"btn btn-outline-secondary btn-edificio-filter-clear\"\r\n          >\r\n            LIMPAR <span className=\"btn-edificio-filter-word\">FILTRO</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EdificioFilter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}